(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(7),i=(n(0),n(85)),a={id:"processing-from-s3",title:"Processing From S3"},p={unversionedId:"processing-from-s3",id:"processing-from-s3",isDocsHomePage:!1,title:"Processing From S3",description:"Audo's noise removal endpoint supports processing audio directly from S3 through the use of presigned URLs. To do this, simply pass presigned URLs to the input and output parameters of the /noise-removal endpoint. The specific format of these presigned urls is as follows:",source:"@site/docs/processing-from-s3.md",slug:"/processing-from-s3",permalink:"/processing-from-s3",version:"current",sidebar:"sidebar",previous:{title:"Endpoints",permalink:"/endpoints"},next:{title:"Supported File Formats",permalink:"/supported-file-format"}},s=[{value:"Full Python Example",id:"full-python-example",children:[]}],l={toc:s};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Audo's noise removal endpoint supports processing audio directly from S3 through the use of presigned URLs. To do this, simply pass presigned URLs to the ",Object(i.b)("inlineCode",{parentName:"p"},"input")," and ",Object(i.b)("inlineCode",{parentName:"p"},"output")," parameters of the ",Object(i.b)("inlineCode",{parentName:"p"},"/noise-removal")," endpoint. The specific format of these presigned urls is as follows:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"input"),": A presigned ",Object(i.b)("inlineCode",{parentName:"li"},"GET")," URL"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"output"),": A presigned ",Object(i.b)("inlineCode",{parentName:"li"},"PUT")," URL with correct ",Object(i.b)("inlineCode",{parentName:"li"},"ContentType")," (ie. ",Object(i.b)("inlineCode",{parentName:"li"},"video/mp4"),")")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Note:")," As of writing, the ",Object(i.b)("inlineCode",{parentName:"p"},"aws presign")," command ",Object(i.b)("a",{parentName:"p",href:"https://github.com/aws/aws-cli/pull/3979"},"does not support generating ",Object(i.b)("inlineCode",{parentName:"a"},"PUT")," URLs"),". However, you can see the example below for how to generate them using Python."),Object(i.b)("h2",{id:"full-python-example"},"Full Python Example"),Object(i.b)("p",null,"First, make sure to have dependencies installed (make sure to upgrade ",Object(i.b)("inlineCode",{parentName:"p"},"audoai-noise-removal"),"):"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-console"},"pip3 install --upgrade audoai-noise-removal boto3\n# Configure aws with `aws configure`\n")),Object(i.b)("p",null,"Then, we can use this example script to generate the presigned URLs and remove noise:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"bucket = 'my-bucket'\ns3_input_file = 'my-input.webm'\ns3_output_file = 'my-noise-removed-output.mp4'\noutput_content_type = 'video/mp4'\naudo_api_key = 'MY-AUDO-API-KEY'\n\n# Generate Presigned URLs\nimport boto3\ns3_client = boto3.client('s3')\ninput_url = s3_client.generate_presigned_url(\n  'get_object',\n  Params={'Bucket': bucket, 'Key': s3_input_file}\n)\noutput_url = s3_client.generate_presigned_url(\n  'put_object',\n  Params={\n  'Bucket': bucket,\n  'Key': s3_output_file,\n  'ContentType': output_content_type\n  },\n  HttpMethod='PUT'\n)\n\n# Remove Noise\nfrom time import sleep\nfrom audoai.noise_removal import NoiseRemovalClient\n\nnoise_removal = NoiseRemovalClient(api_key=audo_api_key)\njob_id = noise_removal.create_job(input=input_url, output=output_url)\nnoise_removal.wait_for_job_id(job_id)\n\nprint('Noise removal complete. Waiting for upload...')\nsleep(2.0)\nprint('Final result:', noise_removal.get_status(job_id))\n")))}u.isMDXComponent=!0},85:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=u(n),d=r,b=c["".concat(a,".").concat(d)]||c[d]||m[d]||i;return n?o.a.createElement(b,p(p({ref:t},l),{},{components:n})):o.a.createElement(b,p({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,a[1]=p;for(var l=2;l<i;l++)a[l]=n[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);