(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{74:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return p})),t.d(n,"toc",(function(){return a})),t.d(n,"default",(function(){return u}));var o=t(3),i=t(7),s=(t(0),t(88)),r={id:"processing-from-s3",title:"Processing From S3"},p={unversionedId:"processing-from-s3",id:"processing-from-s3",isDocsHomePage:!1,title:"Processing From S3",description:"Audo's noise removal endpoint supports processing audio directly from S3 through the use of presigned URLs. To do this, simply pass presigned URLs to the input and output parameters of the /noise-removal endpoint. The specific format of these presigned urls is as follows:",source:"@site/docs/processing-from-s3.md",slug:"/processing-from-s3",permalink:"/processing-from-s3",version:"current",sidebar:"sidebar",previous:{title:"Endpoints",permalink:"/endpoints"},next:{title:"Python API",permalink:"/python-api"}},a=[{value:"Full Python Example",id:"full-python-example",children:[]}],l={toc:a};function u(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(s.b)("wrapper",Object(o.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Audo's noise removal endpoint supports processing audio directly from S3 through the use of presigned URLs. To do this, simply pass presigned URLs to the ",Object(s.b)("inlineCode",{parentName:"p"},"input")," and ",Object(s.b)("inlineCode",{parentName:"p"},"output")," parameters of the ",Object(s.b)("inlineCode",{parentName:"p"},"/noise-removal")," endpoint. The specific format of these presigned urls is as follows:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"input"),": A presigned ",Object(s.b)("inlineCode",{parentName:"li"},"GET")," URL"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"output"),": A presigned ",Object(s.b)("inlineCode",{parentName:"li"},"PUT")," URL with correct ",Object(s.b)("inlineCode",{parentName:"li"},"ContentType")," (ie. ",Object(s.b)("inlineCode",{parentName:"li"},"video/mp4"),")")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Note:")," As of writing, the ",Object(s.b)("inlineCode",{parentName:"p"},"aws presign")," command ",Object(s.b)("a",{parentName:"p",href:"https://github.com/aws/aws-cli/pull/3979"},"does not support generating ",Object(s.b)("inlineCode",{parentName:"a"},"PUT")," URLs"),". However, you can see the example below for how to generate them using Python."),Object(s.b)("h2",{id:"full-python-example"},"Full Python Example"),Object(s.b)("p",null,"First, make sure to have dependencies installed (make sure to upgrade ",Object(s.b)("inlineCode",{parentName:"p"},"audoai-noise-removal"),"):"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-console"},"pip3 install --upgrade audoai-noise-removal boto3\n# Configure aws with `aws configure`\n")),Object(s.b)("p",null,"Then, we can use this example script to generate the presigned URLs and remove noise:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-python"},"bucket = 'my-bucket'\ns3_input_file = 'my-input.webm'\ns3_output_file = 'my-noise-removed-output.mp4'\noutput_content_type = 'video/mp4'\naudo_api_key = 'MY-AUDO-API-KEY'\n\n# Generate Presigned URLs\nimport boto3\ns3_client = boto3.client('s3')\ninput_url = s3_client.generate_presigned_url(\n  'get_object',\n  Params={'Bucket': bucket, 'Key': s3_input_file}\n)\noutput_url = s3_client.generate_presigned_url(\n  'put_object',\n  Params={\n  'Bucket': bucket,\n  'Key': s3_output_file,\n  'ContentType': output_content_type\n  },\n  HttpMethod='PUT'\n)\n\n# Remove Noise\nfrom time import sleep\nfrom audoai.noise_removal import NoiseRemovalClient\n\nnoise_removal = NoiseRemovalClient(api_key=audo_api_key)\njob_id = noise_removal.create_job(input=input_url, output=output_url)\nnoise_removal.wait_for_job_id(job_id)\n\nprint('Noise removal complete. Waiting for upload...')\nsleep(2.0)\nprint('Final result:', noise_removal.get_status(job_id))\n")))}u.isMDXComponent=!0}}]);